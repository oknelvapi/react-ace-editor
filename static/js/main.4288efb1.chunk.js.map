{"version":3,"sources":["components/editor.js","components/button.view.js","components/button.js","components/content-box.view.js","components/content-box.js","common/App.js","index.js"],"names":["Editor","state","value","_this","props","_this$props","this","onChange","height","width","readOnly","showGutter","highlightActiveLine","showLineNumbers","react_default","a","createElement","lib_default","mode","theme","name","editorProps","$blockScrolling","showPrintMargin","enableLiveAutocompletion","enableSnippets","nextProps","prevState","Component","Button","styled","button","_templateObject","save","ButtonBox","_ref","icon","action","onClick","react_fontawesome_index_es","size","content_box_view","Main","main","content_box_view_templateObject","Field","div","_templateObject2","opened","ContentView","ContentBox","tempValue","onOpened","setState","onClosed","onSaved","newValue","_this$state","components_button","faCode","editor_Editor","faWindowClose","faSave","App","content_box_ContentBox","ReactDOM","render","common_App","document","getElementById"],"mappings":"kQAMqBA,0NAEjBC,MAAQ,CACJC,MAAOC,EAAKC,MAAMF,+EASb,IAAAG,EAG4CC,KAAKF,MAF9CG,EADHF,EACGE,SAAUC,EADbH,EACaG,OAAQC,EADrBJ,EACqBI,MAClBC,EAFHL,EAEGK,SAAUC,EAFbN,EAEaM,WACVC,EAHHP,EAGGO,oBAAqBC,EAHxBR,EAGwBQ,gBAE7B,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,KAAK,MACLC,MAAM,QACNZ,SAAUA,EACVa,KAAK,mBACLC,YAAa,CAACC,iBAAiB,GAC/Bd,OAAQA,EACRC,MAAOA,EACPP,MAAOI,KAAKL,MAAMC,MAClBQ,SAAUA,EACVC,WAAYA,EACZC,oBAAqBA,EACrBC,gBAAiBA,EACjBU,iBAAiB,EACjBC,0BAAwB,EACxBC,gBAAc,uDA3BMC,EAAWC,GACvC,MAAO,CACHzB,MAAOwB,EAAUxB,cARO0B,0YCJ7B,IAAMC,EAASC,IAAOC,OAAVC,IAGF,SAAA5B,GAAK,OAAIA,EAAM6B,KAAO,OAAS,MCejCC,EAdG,SAAAC,GAA0B,IAAxBF,EAAwBE,EAAxBF,KAAMG,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,OAC5B,OACIvB,EAAAC,EAAAC,cAACa,EAAD,CACII,KAAMA,EACNK,QAAWD,GAEXvB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACIH,KAAMA,EACNI,KAAK,0iBCZN,IAAAC,EAAA,CACXC,KAAMZ,IAAOa,KAATC,KAWJC,MAAOf,IAAOgB,IAATC,IAKa,SAAA3C,GAAK,OAAIA,EAAM4C,OAAS,UAAY,YCXlDN,EAAgBO,EAAhBP,KAAMG,EAAUI,EAAVJ,MAKOK,6MAEjBjD,MAAQ,CACJ+C,QAAQ,EACR9C,MAAO,GACPiD,UAAW,MASfC,SAAW,WACPjD,EAAKkD,SAAS,CACTL,QAAQ,EACRG,UAAWhD,EAAKF,MAAMC,WAG/BoD,SAAW,WACPnD,EAAKkD,SAAS,CACVL,QAAQ,OAGhBO,QAAU,WACNpD,EAAKkD,SAAS,CACVnD,MAAOC,EAAKF,MAAMkD,YAEtBhD,EAAKmD,cAET/C,SAAU,SAACiD,GACPrD,EAAKkD,SAAS,CACVF,UAAWK,wFAxBflD,KAAK+C,SAAS,CACVnD,MAdC,6JAyCA,IAAAuD,EAC+BnD,KAAKL,MAAlCC,EADFuD,EACEvD,MAAO8C,EADTS,EACST,OAAQG,EADjBM,EACiBN,UAEtB,OACIrC,EAAAC,EAAAC,cAAC0B,EAAD,KACI5B,EAAAC,EAAAC,cAAC6B,EAAD,CAAOG,QAAQ,GACXlC,EAAAC,EAAAC,cAAC0C,EAAD,CACIrB,OAAU/B,KAAK8C,SACfhB,KAAMuB,MAEV7C,EAAAC,EAAAC,cAAC4C,EAAD,CACIpD,OAAO,QACPC,MAAM,QACNP,MAAOA,EACPQ,UAAU,EACVC,YAAY,EACZC,qBAAqB,EACrBC,iBAAiB,KAGzBC,EAAAC,EAAAC,cAAC6B,EAAD,CAAOG,OAAQA,GACXlC,EAAAC,EAAAC,cAAC0C,EAAD,CACIrB,OAAQ/B,KAAKgD,SACblB,KAAMyB,MAEV/C,EAAAC,EAAAC,cAAC0C,EAAD,CACIrB,OAAQ/B,KAAKiD,QACbtB,MAAM,EACNG,KAAM0B,MAEVhD,EAAAC,EAAAC,cAAC4C,EAAD,CACIpD,OAAO,QACPC,MAAM,QACNP,MAAOiD,EACPzC,UAAU,EACVC,YAAY,EACZC,qBAAqB,EACrBC,iBAAiB,EACjBN,SAAUD,KAAKC,oBA3ECqB,aCHzBmC,EANH,WACR,OACIjD,EAAAC,EAAAC,cAACgD,EAAD,OCDRC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4288efb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// React AceEditor\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/xcode'\n\nexport default class Editor extends Component {\n\n    state = {\n        value: this.props.value\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        return {\n            value: nextProps.value \n        }\n    }\n\n    render() {\n        const { onChange, height, width, \n                readOnly, showGutter, \n                highlightActiveLine, showLineNumbers } = this.props;\n\n        return (\n            <AceEditor\n                mode=\"sql\"\n                theme=\"xcode\"\n                onChange={onChange}\n                name=\"UNIQUE_ID_OF_DIV\"\n                editorProps={{$blockScrolling: true}}\n                height={height}\n                width={width}\n                value={this.state.value}\n                readOnly={readOnly}\n                showGutter={showGutter}\n                highlightActiveLine={highlightActiveLine}\n                showLineNumbers={showLineNumbers}\n                showPrintMargin={false}\n                enableLiveAutocompletion\n                enableSnippets\n            />\n        );\n    };\n}","import styled from 'styled-components';\n\nexport const Button = styled.button`\n        position: absolute;\n        top: 0;\n        right: ${props => props.save ? \"32px\" : \"0\"};\n        border: none;\n        background-color: inherit;\n        z-index: 10;\n        color: grey;\n        :hover {\n            color: black;\n        }\n        :focus {\n            outline: none;\n        }\n    `;","import React from 'react';\n//  Font Awesome Icon\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// Components\nimport { Button } from './button.view';\n\nconst ButtonBox = ({save, icon, action}) => {\n    return (\n        <Button \n            save={save}\n            onClick = {action}\n        >\n            <FontAwesomeIcon \n                icon={icon} \n                size='lg' \n            />\n        </Button>\n    );\n}\n\nexport default ButtonBox;","import styled from 'styled-components';\n\nexport default {\n    Main: styled.main`\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        margin-top: 16px;\n        @media (max-width: 1444px){\n                flex-direction: column;\n            }\n    `,\n    Field: styled.div`\n        padding: 6px;\n        margin: 3px;\n        position: relative;\n        border: 1px solid silver;\n        visibility: ${props => props.opened ? \"visible\" : \"hidden\"};\n    `,\n}","import React, { Component } from 'react';\n//  Font Awesome Icon\nimport { faSave, faCode, faWindowClose } from '@fortawesome/free-solid-svg-icons';\n// Components\nimport Editor from './editor';\nimport ButtonBox from './button';\nimport ContentView from './content-box.view';\n\nconst { Main, Field } = ContentView;\nconst example = `select * from cara audit trail\nwhere root_id = '\\${root_id}' [and (event in ($(event_names)) order by time_stamp\ndesc `;\n              \nexport default class ContentBox extends Component {\n\n    state = {\n        opened: false,\n        value: '',\n        tempValue: ''\n    };\n\n    componentDidMount(){\n        this.setState({\n            value: example\n        });\n    };\n    \n    onOpened = () => {\n        this.setState({\n             opened: true,\n             tempValue: this.state.value,\n        });\n    };\n    onClosed = () => {\n        this.setState({\n            opened: false\n       });\n    };\n    onSaved = () => {\n        this.setState({\n            value: this.state.tempValue\n        });\n        this.onClosed();\n    };\n    onChange =(newValue) => {\n        this.setState({\n            tempValue: newValue\n        })\n    };\n\n    render() {\n        const {value, opened, tempValue } = this.state;\n\n        return (\n            <Main>\n                <Field opened={true}>\n                    <ButtonBox \n                        action = {this.onOpened}\n                        icon={faCode}\n                    />\n                    <Editor\n                        height=\"300px\"\n                        width=\"500px\"\n                        value={value}\n                        readOnly={true}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        showLineNumbers={false} \n                    />\n                </Field>\n                <Field opened={opened}>\n                    <ButtonBox \n                        action={this.onClosed}\n                        icon={faWindowClose}\n                    />\n                    <ButtonBox \n                        action={this.onSaved}\n                        save={true}\n                        icon={faSave}\n                    />\n                    <Editor \n                        height=\"786px\"\n                        width=\"586px\"\n                        value={tempValue}\n                        readOnly={false}\n                        showGutter={true}\n                        highlightActiveLine={false}\n                        showLineNumbers={true}\n                        onChange={this.onChange}\n                    />\n                </Field>\n            </Main>   \n        );\n    };\n}","import React from 'react';\n\nimport ContentBox from '../components/content-box';\n\nconst App = () => {\n    return (\n        <ContentBox />\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './common/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}